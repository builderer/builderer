name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  MyPy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.12", "3.13"]
    steps:
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY }}
    - name: Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install MyPy
      run: pip install mypy black
    - name: Clone Builderer
      uses: actions/checkout@v4
    - name: MyPy
      run: mypy builderer --check-untyped-defs
    - name: Formatting
      run: black --check .

  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["pypy3.9", "pypy3.10", "3.9", "3.10", "3.12", "3.13"]
    steps:
    - uses: mymindstorm/setup-emsdk@v14
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY }}
    - name: Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Build Tools
      run: |
        sudo apt update
        sudo apt -y install build-essential g++-multilib libx11-dev libxcursor-dev libxinerama-dev libxi-dev libxrandr-dev
    - name: Clone Builderer
      uses: actions/checkout@v4
      with:
        path: builderer
    - name: Clone Examples
      uses: actions/checkout@v4
      with:
        repository: builderer/builderer-examples
        ref: main
        path: examples
    - name: Install Builderer
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install ./builderer
    - name: Generate Build Files
      run: |
        source .venv/bin/activate
        cd examples
        builderer --config=linux generate
        builderer --config=emscripten generate
    - name: Manual Build Examples
      run: |
        cd examples
        make -C Out/build/linux build -j$(nproc) CONFIG=debug
        make -C Out/build/emscripten build -j$(nproc)
    - name: Build Examples
      run: |
        cd examples
        builderer --config=linux build --build_config=release

  macOS:
    runs-on: macos-latest
    steps:
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Clone Builderer
      uses: actions/checkout@v4
      with:
        path: builderer
    - name: Clone Examples
      uses: actions/checkout@v4
      with:
        repository: builderer/builderer-examples
        ref: main
        path: examples
    - name: Install Builderer
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install ./builderer
    - name: Generate Build Files
      run: |
        source .venv/bin/activate
        cd examples
        builderer --config=macos generate
    - name: Manual Build Examples
      run: |
        cd examples
        make -C Out/build/macos build -j$(sysctl -n hw.logicalcpu) CONFIG=debug ARCH=x86_64
    - name: Build Examples
      run: |
        cd examples
        builderer --config=macos build --build_config=release --build_arch=arm64

  Windows:
    runs-on: windows-latest
    steps:
    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Clone Builderer
      uses: actions/checkout@v4
      with:
        path: builderer
    - name: Clone Examples
      uses: actions/checkout@v4
      with:
        repository: builderer/builderer-examples
        ref: main
        path: examples
    - name: Install Builderer
      run: |
        python -m venv .venv
        .venv\Scripts\activate.bat
        pip install .\builderer
    - name: Generate Build Files
      run: |
        .venv\Scripts\activate.bat
        cd examples
        builderer --config=windows generate
    - name: Manual Build Examples
      shell: cmd
      run: |
        cd examples
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        msbuild Out\build\windows\Solution.sln /p:Platform=x64 /p:Configuration=debug
    - name: Build Examples
      run: |
        cd examples
        builderer --config=windows build --build_config=release
